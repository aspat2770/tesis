questions,reference,query
Tampilkan seluruh data pegawai,SELECT * FROM pegawai,"SELECT   nip,   nama,   kota_lahir,   tanggal_lahir,   jenis_kelamin,   status_pernikahan,   agama,   alamat,   email,   no_hp,   pangkat,   tanggal_sk_terakhir,   tmt_cpns,   jabatan,   spesialis,   gaji_pokok,   grade,   tunjangan_kinerja,   pendidikan FROM   pegawai"
"Tampilkan nama, jabatan, dan gaji pokok pegawai.","SELECT nama, jabatan, gaji_pokok FROM pegawai","SELECT p.nama, p.jabatan, p.gaji_pokok FROM pegawai AS p"
Tampilkan pegawai dengan pendidikan terakhir S1.,"SELECT nip, nama, pendidikan FROM pegawai WHERE pendidikan = 'S1'","SELECT   p.nip,   p.nama,   p.pendidikan FROM   pegawai AS p JOIN   pendidikan AS pd ON p.pendidikan = pd.id WHERE   pd.nama_pendidikan = 'S1'"
Tampilkan pegawai berdasarkan pendidikan.,"SELECT pendidikan, COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY pendidikan","SELECT pendidikan, COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY pendidikan ORDER BY pendidikan ASC "
Tampilkan pegawai yang lahir di Kota Jakarta.,"SELECT nip, nama, kota_lahir FROM pegawai WHERE kota_lahir = 'Jakarta'","SELECT   nip,   nama,   kota_lahir FROM   pegawai WHERE   kota_lahir = 'Jakarta'"
Tampilkan pegawai dengan pangkat IV/a.,SELECT * FROM pegawai WHERE pangkat = 'IV/a',SELECT * FROM pegawai WHERE pangkat = 'IV/a'
Tampilkan pegawai yang Belum Menikah.,"SELECT nip, nama FROM pegawai WHERE status_pernikahan = 'Belum Menikah'","SELECT nip, nama FROM pegawai WHERE status_pernikahan = 'Belum Menikah'"
Tampilkan pegawai berjenis kelamin laki-laki.,SELECT * FROM pegawai WHERE jenis_kelamin = 'Laki-laki',SELECT * FROM pegawai WHERE jenis_kelamin = 'Laki-laki'
Tampilkan nama pegawai yang memiliki grade lebih dari 7.,SELECT nama FROM pegawai WHERE grade > 7,SELECT nama FROM pegawai WHERE grade > 7
Tampilkan pegawai dengan spesialis perencanaan.,SELECT * FROM pegawai WHERE spesialis LIKE '%Perencanaan%',SELECT * FROM pegawai WHERE spesialis = 'Perencanaan'
Tampilkan nama dan email pegawai yang memiliki jabatan administrator.,"SELECT nama, email FROM pegawai WHERE jabatan = ""Administrator""","SELECT nama, email FROM pegawai JOIN jabatan ON pegawai.jabatan = jabatan.id WHERE jabatan.nama = ""Administrator"""
Tampilkan semua data cuti pegawai.,"SELECT p.nip, p.nama, c.tanggal_mulai, c.tanggal_selesai, c.lama_hari, c.alasan, c.status FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai","SELECT p.nip, p.nama, c.tanggal_mulai, c.tanggal_selesai, c.lama_hari, c.alasan, c.status FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai"
Tampilkan data cuti pegawai yang masih berlangsung.,"SELECT p.nip, p.nama, c.tanggal_mulai, c.tanggal_selesai, c.lama_hari, c.alasan, c.status FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai WHERE c.status = 'berlangsung'","SELECT p.nip, p.nama, c.tanggal_mulai, c.tanggal_selesai, c.lama_hari, c.alasan, c.status FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai WHERE c.status = 'berlangsung'"
Tampilkan pegawai yang sedang mengambil cuti lebih dari 5 hari.,"SELECT p.nip, p.nama, c.tanggal_mulai, c.lama_hari, c.alasan FROM pegawai p JOIN cuti c ON p.id = c.id_pegawai WHERE c.status = 'berlangsung' AND c.lama_hari > 5","SELECT p.nip, p.nama, c.tanggal_mulai, c.lama_hari, c.alasan FROM pegawai p JOIN cuti c ON p.id = c.id_pegawai WHERE c.status = 'berlangsung' AND c.lama_hari > 5"
Tampilkan data cuti pegawai dengan alasan melahirkan.,"SELECT p.nip, p.nama FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai WHERE c.alasan = 'Melahirkan'","SELECT   p.nip,   p.nama,   c.tanggal_mulai,   c.lama_hari,   c.alasan FROM   pegawai AS p JOIN   cuti AS c ON   p.id = c.id_pegawai WHERE   c.alasan = 'Melahirkan'"
Tampilkan cuti yang berlangsung pada bulan Januari.,"SELECT p.nip, p.nama FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai WHERE STRFTIME('%m', c.tanggal_mulai) = '01'","SELECT c.id, c.tanggal_mulai, c.alasan FROM cuti c WHERE STRFTIME('%m', c.tanggal_mulai) = '01'"
Tampilkan pegawai yang cutinya sudah selesai.,"SELECT p.nip, p.nama FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai WHERE c.status = 'selesai'","SELECT p.nip, p.nama, c.tanggal_mulai, c.tanggal_selesai, c.lama_hari, c.alasan, c.status FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai WHERE c.status = 'selesai'"
Tampilkan data cuti dengan tanggal mulai dan tanggal selesai.,"SELECT tanggal_mulai, tanggal_selesai FROM cuti","SELECT c.id, c.id_pegawai, c.tanggal_mulai, c.tanggal_selesai, c.lama_hari, c.alasan FROM cuti AS c"
Tampilkan jumlah hari cuti untuk setiap pegawai.,"SELECT p.nip, p.nama, SUM(c.lama_hari) AS total_hari_cuti FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai GROUP BY p.nip, p.nama","SELECT p.nip, p.nama, SUM(c.lama_hari) AS total_hari_cuti FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai GROUP BY p.nip, p.nama ORDER BY total_hari_cuti DESC"
Tampilkan semua data kehadiran pegawai.,"SELECT p.nip, p.nama, k.waktu FROM kehadiran AS k JOIN pegawai AS p ON k.id_pegawai = p.id","SELECT   p.nip AS NIP_Pegawai,   p.nama AS Nama_Pegawai,   k.tanggal AS Tanggal_Kehadiran,   k.jam AS Jam_Kehadiran,   k.status AS Status_Kehadiran FROM   pegawai AS p JOIN   kehadiran AS k ON   p.id = k.id_pegawai"
Tampilkan kehadiran pegawai pada tanggal 12 desember 2024.,"SELECT p.nip, p.nama, k.waktu FROM kehadiran AS k JOIN pegawai AS p ON k.id_pegawai = p.id WHERE k.tanggal = '2024-12-12'","SELECT p.nip, p.nama, k.waktu FROM pegawai AS p JOIN kehadiran AS k ON p.id = k.id_pegawai WHERE k.tanggal = '2024-12-12'"
Tampilkan pegawai yang hadir tepat waktu pada tanggal 12 desember 2024.,"SELECT p.nip, p.nama, k.waktu FROM kehadiran AS k JOIN pegawai AS p ON k.id_pegawai = p.id WHERE k.status = 'tepat waktu'","SELECT p.nip, p.nama, k.waktu FROM pegawai AS p JOIN kehadiran AS k ON p.id = k.id_pegawai WHERE k.tanggal = '2024-12-12' AND k.status = 'tepat waktu'"
Tampilkan pegawai yang hadir terlambat lebih dari 3 kali dalam bulan ini.,"SELECT p.nip, p.nama, COUNT(*) AS jumlah_terlambat FROM pegawai AS p JOIN kehadiran AS k ON p.id = k.id_pegawai WHERE k.tanggal >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND k.status = 'terlambat' GROUP BY p.nip, p.nama HAVING jumlah_terlambat > 3 ORDER BY jumlah_terlambat DESC"," SELECT p.nip, p.nama, COUNT(*) AS jumlah_terlambat FROM pegawai AS p JOIN kehadiran AS k ON p.id = k.id_pegawai WHERE k.tanggal >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND k.status = 'terlambat' GROUP BY p.nip, p.nama HAVING jumlah_terlambat > 3 ORDER BY jumlah_terlambat DESC "
"Tampilkan data kehadiran untuk bulan tertentu, misalnya 'Februari'.","SELECT p.nip, p.nama, k.waktu FROM pegawai AS p JOIN kehadiran AS k ON p.id = k.id_pegawai WHERE k.tanggal BETWEEN '2023-02-01' AND '2023-02-28'","SELECT p.nip, p.nama, k.waktu FROM pegawai AS p JOIN kehadiran AS k ON p.id = k.id_pegawai WHERE k.tanggal BETWEEN '2023-02-01' AND '2023-02-28'"
Tampilkan jumlah kehadiran per pegawai.,"SELECT p.nip, p.nama, COUNT(*) AS jumlah_kehadiran FROM pegawai AS p JOIN kehadiran AS k ON p.id = k.id_pegawai GROUP BY p.nip, p.nama ORDER BY jumlah_kehadiran DESC"," SELECT   p.nip,   p.nama,   COUNT(*) AS jumlah_kehadiran FROM   pegawai AS p JOIN   kehadiran AS k ON   p.id = k.id_pegawai GROUP BY   p.nip, p.nama ORDER BY   jumlah_kehadiran DESC "
Tampilkan kehadiran pegawai dengan jam masuk setelah pukul 08:00.,"SELECT p.nip, p.nama, TIME_FORMAT(k.waktu, '%H:%i') AS jam_masuk FROM pegawai AS p JOIN kehadiran AS k ON p.id = k.id_pegawai WHERE k.waktu > TIME('08:00:00')","SELECT p.nip, p.nama, TIME_FORMAT(k.waktu, '%H:%i') AS jam_masuk FROM pegawai AS p JOIN kehadiran AS k ON p.id = k.id_pegawai WHERE k.tanggal = CURDATE() AND k.waktu > TIME('08:00:00')"
Tampilkan data kehadiran untuk pegawai tertentu berdasarkan ID.,"SELECT p.nip, p.nama, k.waktu FROM pegawai AS p JOIN kehadiran AS k ON p.id = k.id_pegawai WHERE p.id = 1","SELECT p.nip, p.nama, k.waktu FROM pegawai AS p JOIN kehadiran AS k ON p.id = k.id_pegawai WHERE p.id = 1"
Tampilkan semua data tugas belajar.,SELECT * FROM tugas_belajar,"SELECT id, id_pegawai, tanggal_mulai, tanggal_selesai, lama_hari, jenis_tubel, nomor_sk, perguruan_tinggi, pembiayaan, status FROM tugas_belajar"
Tampilkan pegawai yang sedang mengikuti tugas belajar aktif.,"SELECT p.nip, p.nama FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.status = ""berlangsung""","SELECT p.nip, p.nama, tb.perguruan_tinggi, tb.pembiayaan FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.status = ""berlangsung"""
Tampilkan pegawai yang tugas belajarnya selesai dalam 30 hari terakhir.,"SELECT p.nip, p.nama, tb.tanggal_selesai FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.status = 'selesai' AND tb.tanggal_selesai >= DATE_SUB(NOW(), INTERVAL 30 DAY)","SELECT   p.nip,   p.nama,   tb.tanggal_mulai,   tb.tanggal_selesai FROM   pegawai AS p JOIN   tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE   tb.status = 'selesai' AND tb.tanggal_selesai >= DATE_SUB(NOW(), INTERVAL 30 DAY)"
Tampilkan pegawai tugas belajar di dalam negeri.,"SELECT p.nip, p.nama, tb.pembiayaan FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.lokasi = 'dalam negeri'","SELECT p.nip, p.nama, c.tanggal_mulai, c.lama_hari, tb.perguruan_tinggi, tb.pembiayaan FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai JOIN cuti AS c ON p.id = c.id_pegawai WHERE c.alasan LIKE '%Dalam Negeri%'"
Tampilkan pegawai tugas belajar di luar negeri.,"SELECT p.nip, p.nama, tb.pembiayaan FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.lokasi = 'luar negeri'","SELECT p.nip, p.nama, tb.perguruan_tinggi, tb.negara FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.negara <> 'Indonesia'"
Tampilkan pegawai tugas belajar dengan pembiayaan mandiri.,"SELECT p.nip, p.nama, tb.pembiayaan FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.pembiayaan = 'mandiri'","SELECT p.nip, p.nama, tb.perguruan_tinggi, tb.pembiayaan FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.status = 'berlangsung' AND tb.pembiayaan = 'Mandiri'"
Tampilkan pegawai tugas belajar dengan beasiswa.,"SELECT p.nip, p.nama, tb.pembiayaan FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.pembiayaan = 'beasiswa'","SELECT p.nip, p.nama, tb.pembiayaan FROM pegawai p JOIN tugas_belajar tb ON p.id = tb.id_pegawai WHERE tb.pembiayaan = 'Beasiswa'"
Tampilkan pegawai yang mengikuti tugas belajar di UGM.,"SELECT p.nip, p.nama, tb.pembiayaan FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.perguruan_tinggi = 'UGM'","SELECT p.nip, p.nama, tb.perguruan_tinggi FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.perguruan_tinggi = ""UGM"""
Tampilkan pegawai yang mengikuti tugas belajar di Institut Teknologi Bandung.,"SELECT p.nip, p.nama, tb.pembiayaan FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.perguruan_tinggi = 'Institut Teknologi Bandung'","SELECT p.nip, p.nama, p.jabatan, tb.perguruan_tinggi, tb.tanggal_mulai, tb.tanggal_selesai, tb.lama_hari FROM pegawai p JOIN tugas_belajar tb ON p.id = tb.id_pegawai WHERE tb.perguruan_tinggi = 'Institut Teknologi Bandung'"
Tampilkan tugas belajar yang memiliki lama hari lebih dari 1 tahun.,SELECT * FROM tugas_belajar WHERE lama_hari > 365,"SELECT p.nip, p.nama, tb.tanggal_mulai, tb.tanggal_selesai, tb.lama_hari FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.lama_hari > 365 ORDER BY tb.tanggal_mulai DESC"
Tampilkan pegawai yang mengikuti tugas belajar dengan nomor SK SK/2023/11/09/TUBEL/24,"SELECT p.nip, p.nama, tb.nomor_sk FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.nomor_sk = 'SK/2023/11/09/TUBEL/24'","SELECT   p.nip,   p.nama,   p.jabatan,   tb.nomor_sk FROM   pegawai AS p JOIN   tugas_belajar AS tb ON   p.id = tb.id_pegawai WHERE   tb.nomor_sk = 'SK/2023/11/09/TUBEL/24'"
Tampilkan data tugas belajar berdasarkan tanggal mulai dan selesai.,"SELECT tanggal_mulai, tanggal_selesai FROM tugas_belajar","SELECT p.nip, p.nama, tb.tanggal_mulai, tb.tanggal_selesai FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai ORDER BY tb.tanggal_mulai ASC, tb.tanggal_selesai DESC"
Tampilkan nama dan jabatan pegawai yang sedang mengambil cuti.,"SELECT p.nama, p.jabatan FROM pegawai p JOIN cuti c ON p.id = c.id_pegawai WHERE c.status = 'berlangsung'","SELECT p.nama, p.jabatan FROM pegawai p JOIN cuti c ON p.id = c.id_pegawai WHERE c.status = 'berlangsung'"
Tampilkan nama pegawai dan alasannya bagi pegawai yang sedang cuti .,"SELECT p.nama, c.alasan FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai WHERE c.status = 'berlangsung'","SELECT p.nama, c.alasan FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai WHERE c.status = 'berlangsung'"
Tampilkan data pegawai yang belum pernah hadir dalam sebulan terakhir.,"SELECT p.nip, p.nama FROM pegawai AS p LEFT JOIN kehadiran AS k ON p.id = k.id_pegawai AND k.tanggal >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) WHERE k.id IS NULL","SELECT   p.id,   p.nip,   p.nama FROM   pegawai AS p LEFT JOIN   kehadiran AS k ON p.id = k.id_pegawai AND k.tanggal >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) WHERE   k.id IS NULL"
Tampilkan nama pegawai dan beserta nama perguruan tingginya bagi pegawai yang tugas belajar masih berlangsung .,"SELECT p.nama, tb.perguruan_tinggi FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.status = 'berlangsung'","SELECT p.nama AS Nama_Pegawai, tb.perguruan_tinggi AS Perguruan_Tinggi FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.status = 'berlangsung'"
Tampilkan nama pegawai yang memiliki gaji pokok lebih dari Rp10.000.000 dan sedang cuti.,SELECT nama FROM pegawai WHERE gaji_pokok > 10000000,SELECT p.nama FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai WHERE c.status = 'berlangsung' AND p.gaji_pokok > 10000000
Tampilkan pegawai dengan status terlambat dalam tabel kehadiran.,"SELECT pegawai.nip, pegawai.nama, kehadiran.waktu FROM kehadiran INNER JOIN pegawai ON pegawai.id = kehadiran.id_pegawai WHERE kehadiran.status = 'telat'","SELECT pegawai.nip, pegawai.nama, kehadiran.waktu FROM kehadiran INNER JOIN pegawai ON pegawai.id = kehadiran.id_pegawai WHERE kehadiran.tanggal = CURDATE() AND kehadiran.status = 'telat'"
Tampilkan data pegawai dengan jabatan administrator yang sedang mengambil tugas belajar.,"SELECT p.nip, p.nama, p.jabatan FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE p.jabatan = 'administrator' AND tb.status = 'berlangsung'","SELECT p.nip, p.nama, p.jabatan, tb.nomor_sk, tb.perguruan_tinggi FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE p.jabatan = 'administrator' AND tb.status = 'berlangsung'"
Tampilkan nama pegawai dan lokasi tugas belajar yang mereka ikuti.,"SELECT p.nip, p.nama, tb.perguruan_tinggi FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai","SELECT p.nip, p.nama, tb.perguruan_tinggi AS lokasi_tugas_belajar FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.status = 'berlangsung'"
Tampilkan pegawai dengan kehadiran tepat waktu.,"SELECT p.nip, p.nama, k.waktu FROM pegawai AS p JOIN kehadiran AS k ON p.id = k.id_pegawai WHERE k.status = 'tepat waktu'","SELECT   p.nip,   p.nama,   k.waktu FROM   pegawai AS p JOIN   kehadiran AS k ON p.id = k.id_pegawai WHERE   k.tanggal = CURDATE() AND k.status = 'tepat waktu'"
Kelompokkan data pegawai berdasarkan umur,"SELECT CASE WHEN TIMESTAMPDIFF(YEAR, tanggal_lahir, CURDATE()) < 30 THEN 'Di bawah 30 tahun' WHEN TIMESTAMPDIFF(YEAR, tanggal_lahir, CURDATE()) BETWEEN 30 AND 39 THEN '30-39 tahun' WHEN TIMESTAMPDIFF(YEAR, tanggal_lahir, CURDATE()) BETWEEN 40 AND 49 THEN '40-49 tahun' ELSE '50 tahun ke atas' END AS kategori_umur, COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY kategori_umur","SELECT   CASE   WHEN TIMESTAMPDIFF(YEAR, tanggal_lahir, CURDATE()) < 30 THEN 'Di bawah 30 tahun'   WHEN TIMESTAMPDIFF(YEAR, tanggal_lahir, CURDATE()) BETWEEN 30 AND 39 THEN '30-39 tahun'   WHEN TIMESTAMPDIFF(YEAR, tanggal_lahir, CURDATE()) BETWEEN 40 AND 49 THEN '40-49 tahun'   ELSE '50 tahun ke atas'   END AS kategori_umur,   COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY kategori_umur"
Kelompokkan data pegawai berdasarkan pendidikan,"SELECT pendidikan, COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY pendidikan","SELECT   pendidikan,   COUNT(*) AS jumlah_pegawai FROM   pegawai GROUP BY   pendidikan ORDER BY   pendidikan ASC"
Kelompokkan data pegawai berdasarkan status pernikahan,"SELECT status_pernikahan, COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY status_pernikahan","SELECT status_pernikahan, COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY status_pernikahan ORDER BY jumlah_pegawai DESC "
Kelompokkan jumlah pegawai berdasarkan lokasi tugas belajar,"SELECT lokasi, COUNT(*) AS jumlah_pegawai FROM tugas_belajar GROUP BY lokasi","SELECT   tb.lokasi,   COUNT(*) AS jumlah_pegawai FROM   tugas_belajar AS tb JOIN   pegawai AS p ON tb.id_pegawai = p.id GROUP BY   tb.lokasi ORDER BY   jumlah_pegawai DESC"
Kelompokkan jumlah pegawai berdasarkan alasan cuti,"SELECT alasan, COUNT(*) AS jumlah_pegawai FROM cuti GROUP BY alasan","SELECT c.alasan, COUNT(DISTINCT c.id_pegawai) AS jumlah_pegawai FROM cuti c GROUP BY c.alasan"
tampilkan data umur pegawai dan di urut dari yang tertua,"SELECT nip, nama, tanggal_lahir, TIMESTAMPDIFF(YEAR, tanggal_lahir, CURDATE()) AS umur FROM pegawai ORDER BY umur DESC","SELECT nip, nama, tanggal_lahir, TIMESTAMPDIFF(YEAR, tanggal_lahir, CURDATE()) AS umur FROM pegawai ORDER BY umur DESC"
tampilkan total pegawai yang terdaftar dalam sistem,SELECT COUNT(*) as total_pegawai FROM pegawai,SELECT COUNT(*) AS total_pegawai FROM pegawai
Tampilkan pegawai berjenis kelamin perempuan,SELECT * FROM pegawai WHERE jenis_kelamin = 'Perempuan',"SELECT nip, nama FROM pegawai WHERE jenis_kelamin = ""Perempuan"""
Tampilkan jumlah pegawai per jenis kelamin?,"SELECT jenis_kelamin, COUNT(*) as jumlah FROM pegawai GROUP BY jenis_kelamin","SELECT jenis_kelamin, COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY jenis_kelamin ORDER BY jumlah_pegawai DESC"
Tampilkan daftar pegawai dengan gaji tertinggi (top 10),"SELECT nama, jabatan, gaji_pokok, tunjangan_kinerjaFROM pegawai ORDER BY gaji_pokok DESC LIMIT 10","SELECT nip, nama, gaji_pokok FROM pegawai ORDER BY gaji_pokok DESC LIMIT 10"
Tampilkan rata-rata gaji pokok pegawai per grade,"SELECT grade, AVG(gaji_pokok) as rata_rata_gajiFROM pegawaiGROUP BY gradeORDER BY grade","SELECT grade, AVG(gaji_pokok) AS rata_rata_gaji_pokok FROM pegawai GROUP BY grade ORDER BY grade"
Tampilkan total pengajuan cuti tahun ini,SELECT COUNT(*) as total_cuti FROM cuti WHERE YEAR(tanggal_mulai) = YEAR(CURRENT_DATE),SELECT COUNT(*) AS total_pengajuan_cuti FROM cuti WHERE YEAR(tanggal_mulai) = YEAR(NOW())
Tampilkan siapa saja pegawai yang sedang cuti saat ini,"SELECT p.nama, c.tanggal_mulai, c.tanggal_selesai, c.alasanFROM cuti cJOIN pegawai p ON c.id_pegawai = p.idWHERE CURRENT_DATE BETWEEN c.tanggal_mulai AND c.tanggal_selesai","SELECT p.nip, p.nama FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai WHERE c.status = ""berlangsung"""
Tampilkan rata-rata lama cuti yang diambil pegawai,"SELECT p.nama, AVG(c.lama_hari) as rata_rata_cutiFROM cuti cJOIN pegawai p ON c.id_pegawai = p.idGROUP BY p.id, p.nama",SELECT AVG(c.lama_hari) AS rata_rata_lama_cuti FROM cuti AS c JOIN pegawai AS p ON c.id_pegawai = p.id
Tampilkan pegawai yang paling sering mengambil cuti,"SELECT p.nama, COUNT(*) as jumlah_cutiFROM cuti cJOIN pegawai p ON c.id_pegawai = p.idGROUP BY p.id, p.namaORDER BY jumlah_cuti DESC","SELECT p.nip, p.nama, COUNT(c.id) AS jumlah_cuti FROM pegawai AS p JOIN cuti AS c ON p.id = c.id_pegawai GROUP BY p.nip, p.nama ORDER BY jumlah_cuti DESC LIMIT 1"
Berapa persentase cuti yang disetujui vs ditolak?,"SELECT status, COUNT(*) as jumlah, ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cuti), 2) as persentaseFROM cutiGROUP BY status","SELECT CASE WHEN status = 'disetujui' THEN 'Disetujui' ELSE 'Ditolak' END AS status_cuti, COUNT(*) AS jumlah_cuti FROM cuti GROUP BY status_cuti"
Tampilkan rekap kehadiran per pegawai bulan ini,"SELECT p.nama, COUNT(CASE WHEN k.status = 'Hadir' THEN 1 END) as jumlah_hadir, COUNT(CASE WHEN k.status = 'Tidak Hadir' THEN 1 END) as jumlah_tidak_hadirFROM pegawai pLEFT JOIN kehadiran k ON p.id = k.id_pegawaiWHERE MONTH(k.tanggal) = MONTH(CURRENT_DATE)GROUP BY p.id, p.nama","SELECT p.nip,   p.nama,   COUNT(k.status) AS jumlah_hadir FROM   pegawai AS p LEFT JOIN kehadiran AS k ON p.id = k.id_pegawai WHERE   k.tanggal >= DATE_FORMAT(NOW(), '%Y-%m-01') GROUP BY p.nip, p.nama ORDER BY p.nip, p.nama"
Siapa saja pegawai yang terlambat lebih dari 5 kali bulan ini?,"SELECT p.nama, COUNT(*) as jumlah_terlambatFROM kehadiran kJOIN pegawai p ON k.id_pegawai = p.idWHERE MONTH(k.tanggal) = MONTH(CURRENT_DATE)AND k.status = 'Terlambat'GROUP BY p.id, p.namaHAVING COUNT(*) > 5","SELECT   p.nip,   p.nama,   COUNT(k.id) AS keterlambatan FROM   pegawai AS p JOIN   kehadiran AS k ON   p.id = k.id_pegawai WHERE   k.tanggal >= CURDATE() - INTERVAL 1 MONTH   AND k.status > 'terlambat' GROUP BY   p.nip, p.nama HAVING   keterlambatan >= 5 ORDER BY   keterlambatan DESC"
Tampilkan pegawai dengan tingkat kehadiran tertinggi,"SELECT p.nama, COUNT(*) as total_hari, COUNT(CASE WHEN k.status = 'Hadir' THEN 1 END) as hari_hadir, ROUND(COUNT(CASE WHEN k.status = 'Hadir' THEN 1 END) * 100.0 / COUNT(*), 2) as persentase_kehadiranFROM pegawai pLEFT JOIN kehadiran k ON p.id = k.id_pegawaiGROUP BY p.id, p.namaORDER BY persentase_kehadiran DESC","SELECT  nip,  nama,  COUNT(*) AS jumlah_kehadiran FROM  pegawai p JOIN  kehadiran k ON p.id = k.id_pegawai WHERE  k.tanggal BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW() GROUP BY  nip, nama ORDER BY  jumlah_kehadiran DESC LIMIT  1"
Tampilkan distribusi pegawai tugas belajar berdasarkan perguruan tinggi,"SELECT perguruan_tinggi, COUNT(*) as jumlah_pegawaiFROM tugas_belajarGROUP BY perguruan_tinggiORDER BY jumlah_pegawai DESC","SELECT tb.perguruan_tinggi, COUNT(DISTINCT p.nip) AS jumlah_pegawai FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai GROUP BY tb.perguruan_tinggi ORDER BY jumlah_pegawai DESC"
Berapa total biaya yang dikeluarkan untuk pembiayaan tugas belajar?,"SELECT pembiayaan, COUNT(*) as jumlah_pegawai, SUM(lama_hari) as total_hariFROM tugas_belajarGROUP BY pembiayaan",SELECT SUM(tb.pembiayaan) AS total_biaya FROM tugas_belajar AS tb
Tampilkan rata-rata durasi tugas belajar per perguruan tinggi,"SELECT perguruan_tinggi, AVG(lama_hari) as rata_rata_durasiFROM tugas_belajarGROUP BY perguruan_tinggiORDER BY rata_rata_durasi DESC","SELECT perguruan_tinggi, AVG(lama_hari) AS rata_rata_durasi_tugas_belajar FROM tugas_belajar GROUP BY perguruan_tinggi ORDER BY perguruan_tinggi "
Berapa total pengeluaran untuk gaji dan tunjangan per bulan?,"SELECT SUM(gaji_pokok) as total_gaji, SUM(tunjangan_kinerja) as total_tunjangan, SUM(gaji_pokok + tunjangan_kinerja) as total_kompensasiFROM pegawai","SELECT SUM(p.gaji_pokok) AS total_gaji_pokok, SUM(p.tunjangan_kinerja) AS total_tunjangan_kinerja FROM pegawai AS p"
Tampilkan distribusi gaji berdasarkan grade,"SELECT grade, MIN(gaji_pokok) as gaji_minimum, MAX(gaji_pokok) as gaji_maksimum, AVG(gaji_pokok) as gaji_rata_rata, COUNT(*) as jumlah_pegawaiFROM pegawaiGROUP BY gradeORDER BY grade","SELECT p.grade, AVG(p.gaji_pokok) AS rata_rata_gaji FROM pegawai AS p GROUP BY p.grade ORDER BY p.grade ASC"
Tampilkan distribusi usia pegawai,"SELECT FLOOR(DATEDIFF(CURRENT_DATE, tanggal_lahir) / 365) as usia, COUNT(*) as jumlah_pegawaiFROM pegawaiGROUP BY usiaORDER BY usia","SELECT   CASE   WHEN TIMESTAMPDIFF(YEAR, tanggal_lahir, CURDATE()) < 30 THEN 'Di bawah 30 tahun'   WHEN TIMESTAMPDIFF(YEAR, tanggal_lahir, CURDATE()) BETWEEN 30 AND 39 THEN '30-39 tahun'   WHEN TIMESTAMPDIFF(YEAR, tanggal_lahir, CURDATE()) BETWEEN 40 AND 49 THEN '40-49 tahun'   ELSE '50 tahun ke atas'   END AS kategori_umur,   COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY kategori_umur ORDER BY kategori_umur"
Tampilkan distribusi pegawai berdasarkan status pernikahan,"SELECT status_pernikahan, COUNT(*) as jumlah, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM pegawai) as persentaseFROM pegawaiGROUP BY status_pernikahan","SELECT status_pernikahan, COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY status_pernikahan ORDER BY jumlah_pegawai DESC"
Tampilkan jumlah pegawai per kota lahir,"SELECT kota_lahir, COUNT(*) as jumlah_pegawaiFROM pegawaiGROUP BY kota_lahirORDER BY jumlah_pegawai DESC","SELECT kota_lahir, COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY kota_lahir ORDER BY jumlah_pegawai DESC"
Tampilkan distribusi pegawai berdasarkan agama,"SELECT agama, COUNT(*) as jumlah, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM pegawai) as persentaseFROM pegawaiGROUP BY agama","SELECT agama, COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY agama ORDER BY jumlah_pegawai DESC"
Tampilkan jumlah pegawai yang akan pensiun dalam 5 tahun ke depan,"SELECT COUNT(*) as jumlah_pensiunFROM pegawaiWHERE DATEDIFF(DATE_ADD(tanggal_lahir, INTERVAL 60 YEAR), CURRENT_DATE) <= 1825","SELECT COUNT(*) AS jumlah_pegawai_akan_pensiun FROM pegawai WHERE DATE_ADD(tmt_cpns, INTERVAL 55 YEAR) < DATE_ADD(CURDATE(), INTERVAL 1 YEAR)"
Tampilkan distribusi pegawai berdasarkan tingkat pendidikan,"SELECT pendidikan, COUNT(*) as jumlah, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM pegawai) as persentaseFROM pegawaiGROUP BY pendidikan","SELECT pendidikan, COUNT(*) AS jumlah_pegawai FROM pegawai GROUP BY pendidikan ORDER BY pendidikan ASC"
Tampilkan jumlah pegawai tugas belajar per tingkat pendidikan,"SELECT p.pendidikan, COUNT(DISTINCT tb.id_pegawai) as jumlah_tugas_belajarFROM pegawai pLEFT JOIN tugas_belajar tb ON p.id = tb.id_pegawaiGROUP BY p.pendidikan","SELECT p.pendidikan, COUNT(tb.id) AS jumlah_pegawai_tugas_belajar FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai GROUP BY p.pendidikan ORDER BY jumlah_pegawai_tugas_belajar DESC"
Tampilkan distribusi perguruan tinggi tujuan tugas belajar,"SELECT perguruan_tinggi, COUNT(*) as jumlah_pegawaiFROM tugas_belajarGROUP BY perguruan_tinggiORDER BY jumlah_pegawai DESC","SELECT tb.perguruan_tinggi, COUNT(*) AS jumlah_pegawai FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai WHERE tb.status = 'berlangsung' GROUP BY tb.perguruan_tinggi ORDER BY jumlah_pegawai DESC"
Bagaimana tren tingkat kehadiran per departemen dalam 6 bulan terakhir?,"SELECT p.jabatan as departemen, DATE_FORMAT(k.tanggal, '%Y-%m') as bulan, COUNT(DISTINCT p.id) as jumlah_pegawai, COUNT(k.id) as total_hari_kerja, SUM(CASE WHEN k.status = 'Hadir' THEN 1 ELSE 0 END) as jumlah_hadir, ROUND(SUM(CASE WHEN k.status = 'Hadir' THEN 1 ELSE 0 END) * 100.0 / COUNT(k.id), 2) as tingkat_kehadiranFROM pegawai pLEFT JOIN kehadiran k ON p.id = k.id_pegawaiWHERE k.tanggal >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH)GROUP BY p.jabatan, DATE_FORMAT(k.tanggal, '%Y-%m')ORDER BY departemen, bulan","WITH MonthlyAttendance AS ( SELECT   p.departemen,   SUBSTR(k.tanggal, 1, 7) AS bulan,   COUNT(CASE WHEN k.status = 'hadir' THEN 1 END) AS kehadiran,   COUNT(k.id) AS total_hadir FROM pegawai AS p JOIN kehadiran AS k   ON p.id = k.id_pegawai WHERE   k.tanggal >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY   1,   2 ), RankMonthlyAttendance AS ( SELECT   departemen,   bulan,   (   SELECT   COUNT(*)   FROM MonthlyAttendance AS t2   WHERE   t2.departemen = MA.departemen AND t2.kehadiran > MA.kehadiran   ) + 1 AS rank_kehadiran FROM MonthlyAttendance AS MA ) SELECT departemen, bulan, kehadiran / total_hadir * 100 AS tingkat_kehadiran, rank_kehadiran FROM RankMonthlyAttendance ORDER BY bulan, rank_kehadiran"
Siapa saja pegawai dengan tingkat keterlambatan tertinggi dan pola keterlambatannya?,"WITH keterlambatan AS ( SELECT p.id, p.nama, p.jabatan, COUNT(*) as total_keterlambatan, AVG(TIME_TO_SEC(TIMEDIFF(k.jam, '08:00:00'))/60) as rata_rata_keterlambatan_menit, STRING_AGG(DATE_FORMAT(k.tanggal, '%W'), ', ') as hari_terlambat FROM pegawai p JOIN kehadiran k ON p.id = k.id_pegawai WHERE k.status = 'Terlambat' AND k.tanggal >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY p.id, p.nama, p.jabatan)SELECT nama, jabatan, total_keterlambatan, ROUND(rata_rata_keterlambatan_menit, 0) as rata_rata_terlambat_menit, hari_terlambatFROM keterlambatanWHERE total_keterlambatan > 5ORDER BY total_keterlambatan DESCLIMIT 10","WITH PegawaiTerlambat AS ( SELECT   p.nip,   p.nama,   COUNT(*) AS total_keterlambatan,   MAX(k.jam) AS jam_terlambat FROM pegawai AS p JOIN kehadiran AS k   ON p.id = k.id_pegawai WHERE   k.status = 'terlambat' GROUP BY   p.nip,   p.nama ORDER BY   COUNT(*) DESC,   MAX(k.jam) DESC ), PolaKeterlambatan AS ( SELECT   nip,   nama,   MAX(CASE WHEN jam = '07:00:00' THEN 1 ELSE 0 END) AS pukul_07,   MAX(CASE WHEN jam = '07:30:00' THEN 1 ELSE 0 END) AS pukul_0730,   MAX(CASE WHEN jam = '08:00:00' THEN 1 ELSE 0 END) AS pukul_08,   MAX(CASE WHEN jam = '08:30:00' THEN 1 ELSE 0 END) AS pukul_0830,   MAX(CASE WHEN jam = '09:00:00' THEN 1 ELSE 0 END) AS pukul_09,   MAX(CASE WHEN jam = '09:30:00' THEN 1 ELSE 0 END) AS pukul_0930 FROM kehadiran WHERE   status = 'terlambat' GROUP BY   nip,   nama ) SELECT PT.nip, PT.nama, PT.total_keterlambatan, PT.jam_terlambat, PK.pukul_07, PK.pukul_0730, PK.pukul_08, PK.pukul_0830, PK.pukul_09, PK.pukul_0930 FROM PegawaiTerlambat AS PT JOIN PolaKeterlambatan AS PK ON PT.nip = PK.nip"
Bagaimana distribusi pegawai berdasarkan tingkat pendidikan dan masa kerja?,"WITH masa_kerja_kategori AS ( SELECT id, nama, pendidikan, CASE WHEN DATEDIFF(CURRENT_DATE, tmt_cpns)/365 < 5 THEN '< 5 tahun' WHEN DATEDIFF(CURRENT_DATE, tmt_cpns)/365 < 10 THEN '5-10 tahun' WHEN DATEDIFF(CURRENT_DATE, tmt_cpns)/365 < 15 THEN '10-15 tahun' ELSE '> 15 tahun' END as kategori_masa_kerja FROM pegawai)SELECT pendidikan, kategori_masa_kerja, COUNT(*) as jumlah_pegawai, ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY pendidikan), 2) as persentaseFROM masa_kerja_kategoriGROUP BY pendidikan, kategori_masa_kerjaORDER BY pendidikan, kategori_masa_kerja","SELECT   p.pendidikan,   CASE   WHEN TIMESTAMPDIFF(YEAR, p.tmt_cpns, CURDATE()) < 5 THEN '0-5 tahun'   WHEN TIMESTAMPDIFF(YEAR, p.tmt_cpns, CURDATE()) BETWEEN 5 AND 9 THEN '5-9 tahun'   WHEN TIMESTAMPDIFF(YEAR, p.tmt_cpns, CURDATE()) BETWEEN 10 AND 14 THEN '10-14 tahun'   WHEN TIMESTAMPDIFF(YEAR, p.tmt_cpns, CURDATE()) BETWEEN 15 AND 19 THEN '15-19 tahun'   ELSE '20 tahun ke atas'   END AS kategori_masa_kerja,   COUNT(*) AS jumlah_pegawai FROM pegawai AS p GROUP BY   p.pendidikan,   kategori_masa_kerja ORDER BY   p.pendidikan ASC,   kategori_masa_kerja ASC"
Bagaimana progress dan efektivitas program tugas belajar?,"SELECT p.spesialis, COUNT(DISTINCT tb.id) as total_tugas_belajar, COUNT(DISTINCT CASE WHEN tb.status = 'Selesai' THEN tb.id END) as selesai, COUNT(DISTINCT CASE WHEN tb.status = 'Aktif' THEN tb.id END) as aktif, ROUND(AVG(tb.lama_hari), 0) as rata_rata_durasi, STRING_AGG(DISTINCT tb.perguruan_tinggi, ', ') as institusi_pendidikan, ROUND(AVG(CASE WHEN tb.status = 'Selesai' THEN p.gaji_pokok / LAG(p.gaji_pokok) OVER (PARTITION BY p.id ORDER BY tb.tanggal_mulai) ELSE NULL END), 2) as rata_rata_kenaikan_gaji_setelah_selesaiFROM pegawai pJOIN tugas_belajar tb ON p.id = tb.id_pegawaiGROUP BY p.spesialis","SELECT p.nip, p.nama, tb.tanggal_mulai, tb.tanggal_selesai, tb.lama_hari, tb.lokasi, tb.nomor_sk, tb.perguruan_tinggi, tb.pembiayaan, tb.status FROM pegawai AS p JOIN tugas_belajar AS tb ON p.id = tb.id_pegawai"
Bagaimana distribusi gaji berdasarkan masa kerja dan tingkat pendidikan?,"WITH statistik_gaji AS ( SELECT pendidikan, FLOOR(DATEDIFF(CURRENT_DATE, tmt_cpns)/365/5)*5 as masa_kerja_interval, COUNT(*) as jumlah_pegawai, MIN(gaji_pokok) as gaji_minimum, MAX(gaji_pokok) as gaji_maksimum, AVG(gaji_pokok) as gaji_rata_rata, STDDEV(gaji_pokok) as std_deviasi_gaji FROM pegawai GROUP BY pendidikan, FLOOR(DATEDIFF(CURRENT_DATE, tmt_cpns)/365/5)*5)SELECT pendidikan, CONCAT(masa_kerja_interval, '-', masa_kerja_interval + 5, ' tahun') as rentang_masa_kerja, jumlah_pegawai, FORMAT(gaji_minimum, 0) as gaji_minimum, FORMAT(gaji_maksimum, 0) as gaji_maksimum, FORMAT(gaji_rata_rata, 0) as gaji_rata_rata, FORMAT(std_deviasi_gaji, 0) as deviasi_standarFROM statistik_gajiORDER BY pendidikan, masa_kerja_interval","SELECT   p.nip,   p.nama,   TMT_CPNS,   datediff(curdate(), TMT_CPNS) / 365.25 AS masa_kerja,   CASE   WHEN DATEDIFF(CURDATE(), TMT_CPNS) / 365.25 < 5 THEN '0-5 tahun'   WHEN DATEDIFF(CURDATE(), TMT_CPNS) / 365.25 BETWEEN 5 AND 10 THEN '5-10 tahun'   WHEN DATEDIFF(CURDATE(), TMT_CPNS) / 365.25 BETWEEN 10 AND 15 THEN '10-15 tahun'   WHEN DATEDIFF(CURDATE(), TMT_CPNS) / 365.25 BETWEEN 15 AND 20 THEN '15-20 tahun'   ELSE '> 20 tahun'   END AS kategori_masa_kerja,   pendidikan,   gaji_pokok FROM   pegawai AS p"
Siapa kandidat potensial untuk promosi berdasarkan kriteria tertentu?,"WITH kriteria_promosi AS ( SELECT p.id, p.nama, p.jabatan, p.grade, p.pendidikan, DATEDIFF(CURRENT_DATE, p.tanggal_sk_terakhir)/365 as tahun_dijabatan, COUNT(DISTINCT c.id) as jumlah_cuti, AVG(CASE WHEN k.status = 'Hadir' THEN 1 ELSE 0 END) as tingkat_kehadiran, COUNT(DISTINCT tb.id) as pengembangan_diri FROM pegawai p LEFT JOIN cuti c ON p.id = c.id_pegawai AND c.tanggal_mulai >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) LEFT JOIN kehadiran k ON p.id = k.id_pegawai AND k.tanggal >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) LEFT JOIN tugas_belajar tb ON p.id = tb.id_pegawai GROUP BY p.id, p.nama, p.jabatan, p.grade, p.pendidikan, p.tanggal_sk_terakhir)SELECT nama, jabatan, grade, pendidikan, ROUND(tahun_dijabatan, 1) as tahun_dijabatan, jumlah_cuti, ROUND(tingkat_kehadiran * 100, 2) as persentase_kehadiran, pengembangan_diri, ROUND( (tingkat_kehadiran * 0.4) + (CASE WHEN jumlah_cuti <= 12 THEN 1 ELSE 0 END * 0.2) + (CASE WHEN tahun_dijabatan >= 2 THEN 1 ELSE tahun_dijabatan/2 END * 0.2) + (pengembangan_diri * 0.2), 2) as skor_promosiFROM kriteria_promosiWHERE tahun_dijabatan >= 1ORDER BY skor_promosi DESCLIMIT 10","SELECT   p.nip,   p.nama,   TIMESTAMPDIFF(YEAR, p.tanggal_lahir, CURDATE()) AS umur,   p.pangkat,   p.gaji_pokok FROM   pegawai AS p WHERE   umur >= 30 AND umur <= 40   AND (p.pangkat = 'III/a' OR p.pangkat = 'III/b')   AND p.gaji_pokok >= 5000000 ORDER BY   p.umur ASC,   p.pangkat DESC,   p.gaji_pokok DESC"
